#!/usr/bin/perl
# purpose:
# remove_pseudo_bond_in_chimera
# to run in realspace_refine and molprobity

# authors:
# Kevin Sanbonmatsu  12/11/01
# Doonam 2017
# 1. changed help section, so that his macbook pro can run
# 2. automatically removes 3 lines of input gro file


sub usage {
    die <<INTRO;
xyz_to_pdb.pl  converts space separated xyz file to pdb file
Usage:   ./xyz_to_pdb.pl file.pdb file.gro > new_file.pdb
Example: ./xyz_to_pdb.pl ../1_make_top/80S_fit_by_chi_to_1_manual_fixed_trp.pdb dump_10000_steps_5.0_ps.gro > dump_10000_steps_5.0_ps_chains_recovered.pdb
INTRO
}
usage unless @ARGV;

#my $starting_dir = qx{pwd};
#chomp($starting_dir);
#print $starting_dir,"\n";
#push(@INC, "/Users/doonam/Dropbox/research/lanl/computation/run/script/perl/replace_xyz_from_gro");
# Add my library

#$required_file = "pdb_indel.pl";
#
#print (-e $required_file);
#if (-e $required_file){
#    print "pdb_indel exists";
#}
#else {
#    print "pdb_indel not exists\n";
#    #print "$ARGV:", $ARGV;
#    print "ARGV[-1]: ", $ARGV[-1];
#    print "ARGV[0]: ", $ARGV[0];
#    $perl_script_path = $ARGV[0];
#    @splited = split('\/', $perl_script_path);
#    print @splited;
#}


require('pdb_indel.pl');

# remove 3 lines of gro
$output_file_name = substr $ARGV[1], 0, length($ARGV[1])-4;
$output_file_name = $output_file_name . "_without_3_lines.gro";
#print $output_file_name,"\n";
open OUTPUT_FILE, ">", $output_file_name;
@lines = qx{cat $ARGV[1]};
$line_num = 0;
foreach $line (@lines){
    $line_num++;
    chomp($line);
    @splited = split(' ', $line);
    if (($line_num != 1) and ($line_num != 2) and (scalar(@splited) != 3)){
        print OUTPUT_FILE "$line\n";
    }
=pod # not ideal for many cases like "Generated by trjconv
    @splited = split(' ', $line);
	#print $line,"\n";
	#print scalar(@splited),"\n";	
	if (scalar(@splited) > 3) {
		print OUTPUT_FILE "$line\n";
	}
=cut

}
close OUTPUT_FILE;
# remove 3 lines of gro

open(PDB,$ARGV[0]);
open(GRO,$output_file_name);	

#=pod
$i=1;

$Line1=$_;
$Line1=$_;

#    1U      C5*    1  17.459  30.268  24.218
#16508LEU    CD110208  29.423  15.319  19.606
#  539C      C4*11464 -10.096   8.026   1.026

#  539C      C4*11464 -10.096   8.026   1.026


while(<GRO>){
	$Line1=$_;
	@lines1=split(' ',$Line1,scalar @fieldlist);
        @x[$i]=substr($_,21,8);
        @y[$i]=substr($_,29,8);
        @z[$i]=substr($_,37,8);
#	print "x @x[$i] y @y[$i] z @z[$i] \n";
	$i_max = $i;
	$i++;
}

$i=1;
while(<PDB>){
        $Line1=$_;
	&PDB($Line1);					# call PDB subroutine 
        $at_no_space=$at;
        $Count = ($at_no_space =~ s/ //g);     # Remove spaces
        $Count = chomp($at_no_space);     # Remove spaces
	if ($at_no_space ne "TER"){
		$ano_no_space = $ano;
        	$Count = ($ano_no_space =~ s/ //g);     # Remove spaces
		#$i = $ano_no_space;
		$x=10*@x[$i];
		$y=10*@y[$i];
		$z=10*@z[$i];
		$spa = "    ";
#ATOM      2  N   MET N   1      24.730 -94.660  39.310  0.00  0.00

		printf ('%s%5s%s%s%s%s%s%8.3f%8.3f%8.3f%6.2f%6.2f%s',$at,$ano,$ana,$rna,$ch,$rno,$spa,$x,$y,$z,$q1,$q2,$p);
		print "\n";
		$i++;
	}
	else{
		print "TER\n";
	}
}
unlink $output_file_name; # erase this obsolete .gro file
#=cut
